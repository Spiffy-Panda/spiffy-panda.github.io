{"pageProps":{"note":{"id":"dwxnkggefceh0nl2qn5slq3","title":"Quite OK Image Format","desc":"","updated":1659990042803,"created":1658868762247,"custom":{},"fname":"personal_projects.QOI_ImageFormat","type":"note","vault":{"fsPath":"vault"},"contentHash":"1512724b54717ce564cc1a8257e206a7","links":[{"type":"wiki","from":{"fname":"personal_projects.QOI_ImageFormat","id":"dwxnkggefceh0nl2qn5slq3","vaultName":"vault"},"value":"tags.lang.C_sharp","alias":"tags.lang.C_sharp","position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":22,"offset":41},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.lang.C_sharp"}},{"type":"wiki","from":{"fname":"personal_projects.QOI_ImageFormat","id":"dwxnkggefceh0nl2qn5slq3","vaultName":"vault"},"value":"tags.engine.unity","alias":"tags.engine.unity","position":{"start":{"line":4,"column":22,"offset":41},"end":{"line":4,"column":43,"offset":62},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.engine.unity"}},{"from":{"fname":"root","vaultName":"vault"},"type":"backlink","position":{"start":{"line":21,"column":3,"offset":1090},"end":{"line":21,"column":40,"offset":1127},"indent":[]},"value":"personal_projects.QOI_ImageFormat","alias":"personal_projects.QOI_ImageFormat"}],"anchors":{"core-skills":{"type":"header","text":"Core Skills:","value":"core-skills","line":9,"column":0,"depth":4},"abstract":{"type":"header","text":"Abstract","value":"abstract","line":12,"column":0,"depth":2},"goal":{"type":"header","text":"Goal","value":"goal","line":15,"column":0,"depth":2},"approach":{"type":"header","text":"Approach","value":"approach","line":18,"column":0,"depth":2},"results":{"type":"header","text":"Results","value":"results","line":31,"column":0,"depth":2},"next-steps":{"type":"header","text":"Next Steps","value":"next-steps","line":33,"column":0,"depth":2}},"children":[],"parent":"ye8wey5twan53et97kb8uv2","data":{}},"body":"<h1 id=\"quite-ok-image-format\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#quite-ok-image-format\"></a>Quite OK Image Format</h1>\n<h4 id=\"core-skills\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#core-skills\"></a>Core Skills:</h4>\n<p><a class=\"color-tag\" style=\"--tag-color: lightskyblue;\" href=\"/notes/tjvscashz9lswvmn2eoyx62\">C#</a><a class=\"color-tag\" style=\"--tag-color: #019529;\" href=\"/notes/jv5kgrcax1tpx50stts307q\">Unity</a></p>\n<h2 id=\"abstract\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#abstract\"></a>Abstract</h2>\n<p>Implementation of the Quite OK Image Format (QoI)<a id=\"fnref-1\" class=\"fnref\" href=\"#fn-1\">1</a> a lossless image compression algorithm in <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>.</p>\n<h2 id=\"goal\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#goal\"></a>Goal</h2>\n<p>Starting with just the specification<a id=\"fnref-2\" class=\"fnref\" href=\"#fn-2\">2</a> (and an online decoder for validation), I wanted to implement the QoI format in C#, with unity as a visualizer. </p>\n<h2 id=\"approach\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#approach\"></a>Approach</h2>\n<p>I started with the encoder, and took it in stages, names starting with <em>qoi_ </em> are from the spec<a id=\"fnref-2\" class=\"fnref\" href=\"#fn-2\">2</a> but implemented by me.</p>\n<ul>\n<li>implementation: minimal version\n<ul>\n<li><em>qoi_header</em> struct and a tailing 7 0x00 and one 0x01 bytes</li>\n<li><em>qoi_op_rgb</em> and <em>qoi_op_rgba</em> the literals and base case for the \"chunks\" to come</li>\n</ul>\n</li>\n<li>I checked that with an online decoder to see that the image came out as expected. </li>\n<li>implement the running array and <em>qoi_op_index</em> (see spec for details)</li>\n<li>As the rest of the chuck encodings are based on differentials and \"runs\", I made a quick image gradient generator. That way I could control how fast the values change, causing the different encodings to be favored. \n<ul>\n<li><em>qoi_op_diff</em> for small changes</li>\n<li><em>qoi_op_luma</em> for larger changes</li>\n<li><em>qoi_op_run</em> for unbroken sequences of the previous pixel.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"results\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#results\"></a>Results</h2>\n<ul>\n<li>Successfully implemented the standard in unity. It can both read and write files. </li>\n</ul>\n<h2 id=\"next-steps\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#next-steps\"></a>Next Steps</h2>\n<ul>\n<li>I would like to write some tests and visualizers as a demo site.</li>\n</ul>\n<hr>\n<h2 id=\"footnotes\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#footnotes\"></a>Footnotes</h2>\n<ol>\n<li><span id=\"fn-1\" style=\"width: 0; height: 0;\"></span><p><a href=\"https://qoiformat.org/\">https://qoiformat.org/</a><a class=\"fn\" href=\"#fnref-1\">˄</a></p></li>\n<li><span id=\"fn-2\" style=\"width: 0; height: 0;\"></span><p><a href=\"https://qoiformat.org/qoi-specification.pdf\">https://qoiformat.org/qoi-specification.pdf</a><a class=\"fn\" href=\"#fnref-2\">˄</a></p></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/\">Panda's Portfolio</a></li>\n</ul>","noteIndex":{"id":"0gmr4ome7gf2gzyyuq2f7xl","title":"Panda's Portfolio","desc":"","updated":1661194049276,"created":1658781951452,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"d460ba0ea4561ac914592a0630bab258","links":[{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.IK","alias":"Inverse Kinematics","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":46,"offset":46},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.IK"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.lang.C_sharp","alias":"tags.lang.C_sharp","position":{"start":{"line":4,"column":1,"offset":65},"end":{"line":4,"column":22,"offset":86},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.lang.C_sharp"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.engine.unity","alias":"tags.engine.unity","position":{"start":{"line":4,"column":22,"offset":86},"end":{"line":4,"column":43,"offset":107},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.engine.unity"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.robotics","alias":"tags.robotics","position":{"start":{"line":4,"column":43,"offset":107},"end":{"line":4,"column":60,"offset":124},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.robotics"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.3d_mathematics","alias":"tags.3d_mathematics","position":{"start":{"line":4,"column":60,"offset":124},"end":{"line":4,"column":83,"offset":147},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.3d_mathematics"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.ColorSpace","alias":"personal_projects.ColorSpace","position":{"start":{"line":12,"column":3,"offset":576},"end":{"line":12,"column":35,"offset":608},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.ColorSpace"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.lang.Python","alias":"tags.lang.Python","position":{"start":{"line":14,"column":1,"offset":627},"end":{"line":14,"column":21,"offset":647},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.lang.Python"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.lang.C_sharp","alias":"tags.lang.C_sharp","position":{"start":{"line":14,"column":21,"offset":647},"end":{"line":14,"column":42,"offset":668},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.lang.C_sharp"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.toolkit.notebooks","alias":"tags.toolkit.notebooks","position":{"start":{"line":14,"column":42,"offset":668},"end":{"line":14,"column":68,"offset":694},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.toolkit.notebooks"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.engine.unity","alias":"tags.engine.unity","position":{"start":{"line":14,"column":68,"offset":694},"end":{"line":14,"column":89,"offset":715},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.engine.unity"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.QOI_ImageFormat","alias":"personal_projects.QOI_ImageFormat","position":{"start":{"line":21,"column":3,"offset":1090},"end":{"line":21,"column":40,"offset":1127},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.QOI_ImageFormat"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.tech_reading","alias":"tags.tech_reading","position":{"start":{"line":23,"column":1,"offset":1146},"end":{"line":23,"column":22,"offset":1167},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.tech_reading"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.lang.C_sharp","alias":"tags.lang.C_sharp","position":{"start":{"line":23,"column":22,"offset":1167},"end":{"line":23,"column":43,"offset":1188},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.lang.C_sharp"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"tags.engine.unity","alias":"tags.engine.unity","position":{"start":{"line":23,"column":43,"offset":1188},"end":{"line":23,"column":64,"offset":1209},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"tags.engine.unity"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.VR_Minimap","alias":"personal_projects.VR_Minimap","position":{"start":{"line":30,"column":3,"offset":1897},"end":{"line":30,"column":35,"offset":1929},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.VR_Minimap"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.AR_Minimap","alias":"personal_projects.AR_Minimap","position":{"start":{"line":30,"column":40,"offset":1934},"end":{"line":30,"column":72,"offset":1966},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.AR_Minimap"}},{"type":"wiki","from":{"fname":"root","id":"0gmr4ome7gf2gzyyuq2f7xl","vaultName":"vault"},"value":"personal_projects.scrolling_circle_world","alias":"personal_projects.scrolling_circle_world","position":{"start":{"line":33,"column":3,"offset":2141},"end":{"line":33,"column":47,"offset":2185},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"personal_projects.scrolling_circle_world"}}],"anchors":{"inverse-kinematics":{"type":"header","text":"Inverse Kinematics","value":"inverse-kinematics","line":8,"column":0,"depth":1},"core-skills":{"type":"header","text":"Core Skills:","value":"core-skills","line":9,"column":0,"depth":4},"personal_projectscolorspace":{"type":"header","text":"personal_projects.ColorSpace","value":"personal_projectscolorspace","line":18,"column":0,"depth":1},"core-skills-1":{"type":"header","text":"Core Skills:","value":"core-skills-1","line":19,"column":0,"depth":4},"personal_projectsqoi_imageformat":{"type":"header","text":"personal_projects.QOI_ImageFormat","value":"personal_projectsqoi_imageformat","line":27,"column":0,"depth":1},"core-skills-2":{"type":"header","text":"Core Skills:","value":"core-skills-2","line":28,"column":0,"depth":4},"older-projects":{"type":"header","text":"Older Projects","value":"older-projects","line":34,"column":0,"depth":3},"personal_projectsvr_minimap-and-personal_projectsar_minimap":{"type":"header","text":"personal_projects.VR_Minimap and personal_projects.AR_Minimap","value":"personal_projectsvr_minimap-and-personal_projectsar_minimap","line":36,"column":0,"depth":1},"personal_projectsscrolling_circle_world":{"type":"header","text":"personal_projects.scrolling_circle_world","value":"personal_projectsscrolling_circle_world","line":39,"column":0,"depth":1}},"children":["ye8wey5twan53et97kb8uv2","n79b50h63h0l4km1hrogyup"],"parent":null,"data":{},"body":"\n# [[Inverse Kinematics|personal_projects.IK]]\n#### Core Skills:\n[[tags.lang.C_sharp]][[tags.engine.unity]][[tags.robotics]][[tags.3d_mathematics]]\n\n![](/assets/MultiArmIK.png){width: 30%, opacity: 0.7, float: right, margin: 20px, border: 5px solid black}\nInstead of starting with a set of rotations and offsets to obtain an end position from base. Inverse Kinematics starts with an end position and set of constraints and calculates the rotations and offsets that solve them. \n\nMy approach uses unity's *ArticulatedBody* and it's Jacobian to preform a gradient decent. \n\n \n# [[personal_projects.ColorSpace]]\n#### Core Skills:\n[[tags.lang.Python]][[tags.lang.C_sharp]][[tags.toolkit.notebooks]][[tags.engine.unity]]\n\n![](/assets/CIE_LChab_StraightLine.jpg){width: 30%, opacity: 0.7, float: right, margin: 20px, border: 5px solid black}\nSimple Gradients are often made by *lerp* from one color to another. This is dependent on the color space, *sRGB* will produce different gradients then *HSV*. \n\nIn this project I try out different color spaces, *HSV*, *sRGB*, *XYZ*, *Lab* and *Lch*. \n\n# [[personal_projects.QOI_ImageFormat]]\n#### Core Skills:\n[[tags.tech_reading]][[tags.lang.C_sharp]][[tags.engine.unity]]\nPNG the one of the most widely used lossless image compression. In order to compress and decompress images, it uses a large number of different chunk types and calculates are a variety of metrics. As a result, PNG are slow and ram intensive to encode. QoI, is a proposed image format from Dominic Szablewski, that is meant to be quick and light instead. QoI's specification is also just 1 page, compared to PNG's 96 pages.\n\nI was interested in checking out this lossless image compression. In the passed I bit-banged out *BMP*s and studied *JPEG* in computation mathematics. I chose unity, thinking in the future it might be nice to use this in a larger project. \n\n### Older Projects\n\n# [[personal_projects.VR_Minimap]] and [[personal_projects.AR_Minimap]]\nFull 3D minimap using a second camera, changing the Interpupillary distance (IPD) to \"shrink\" the world. Followed up by a project to make the construction viewable in AR.\n\n# [[personal_projects.scrolling_circle_world]]\nExploring the workflow for a game that scrolls on a disk."},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableHandlebarTemplates":true,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteUrl":"https://spiffy-panda.github.io","siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}